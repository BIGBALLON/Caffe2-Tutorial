CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(cifar_forward)

SET(EXECUTABLE classifier)
SET(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} "-std=c++11")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR})

FILE(GLOB SRC_FILES main.cpp)

ADD_EXECUTABLE(${EXECUTABLE}  ${SRC_FILES})

FIND_LIBRARY(CAFFE2_LIBRARY_GPU caffe2_gpu)
FIND_LIBRARY(CAFFE2_LIBRARY_CPU caffe2)
FIND_PATH(CAFFE2_INCLUDE_DIR caffe2/core/common.h)
INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(Caffe2 DEFAULT_MSG CAFFE2_LIBRARY_CPU CAFFE2_LIBRARY_GPU)
IF(CAFFE2_FOUND)
    SET(CAFFE2_LIBRARY ${CAFFE2_LIBRARY_CPU} ${CAFFE2_LIBRARY_GPU})
    SET(CAFFE2_INCLUDE_DIRS ${CAFFE2_INCLUDE_DIR})
    MESSAGE(CAFFE2_INCLUDE_DIR: ${CAFFE2_INCLUDE_DIRS})
ENDIF()

FIND_PACKAGE(Eigen3 REQUIRED)
FIND_PACKAGE(CUDA REQUIRED)
FIND_PACKAGE(OpenCV REQUIRED)

SET(PROJECT_LIBRARIES ${CAFFE2_LIBRARY} ${CUDA_LIBRARIES} ${CUDA_curand_LIBRARY} ${OpenCV_LIBS} )
SET(PROJECT_INCLUDES ${CAFFE2_INCLUDE_DIRS} ${EIGEN3_INCLUDE_DIR} ${CUDA_INCLUDE_DIRS} ${OpenCV_INCLUDE_DIRS} )

MESSAGE(Project_include_path: ${PROJECT_INCLUDES})
INCLUDE_DIRECTORIES(${PROJECT_INCLUDES})
TARGET_LINK_LIBRARIES(${EXECUTABLE} ${PROJECT_LIBRARIES} -L/usr/local/cuda/lib64 -lcuda -lcudart -lprotobuf -lglog -lgflags -ldl -lrt -L/usr/local/lib/)



